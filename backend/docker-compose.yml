services:
  app:
    build: .
    ports:
      - "4000:4000"
    depends_on:
      mysql:
        condition: service_healthy
      mongo:
        condition: service_healthy
    environment:
      PORT: "4000"
      DB_NAME: "surgical_logbook_ms"
      DB_HOST: "mysql"
      DB_PORT: "3306"
      DB_USER: "root"
      MONGO_URI: "mongodb://mongo:27017/surgical_logbook"
      DB_PASSWORD: ""
      salt_rounds: "10"
      environment: "development"
      EMAIL_USER: "e9181d06f3d6a7"
      JWT_SECRET: "mySecret1243"
    volumes:
      - .:/app
      - /app/node_modules
    command: npm run dev
    

  mysql:
    image: mysql:latest
    restart: always
    environment:
      MYSQL_DATABASE: "surgical_logbook_ms"
      MYSQL_ALLOW_EMPTY_PASSWORD: "yes"
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 5s
      retries: 10

  mongo:
    image: mongo:latest
    restart: always
    ports:
      - "27017:27017"
    volumes:
      - mongo_data:/data/db
    healthcheck:
      test: echo 'db.runCommand("ping").ok' | mongosh mongo:27017 --quiet
      interval: 10s
      timeout: 5s
      retries: 5

  phpmyadmin:
    image: phpmyadmin:latest
    ports:
      - 9001:80
    environment:
      - PMA_ARBITRARY=1

  mongo-express:
    image: mongo-express:latest
    restart: always
    ports:
      - "8081:8081"
    environment:
      ME_CONFIG_MONGODB_SERVER: "mongo"
      ME_CONFIG_MONGODB_PORT: "27017"
      ME_CONFIG_BASICAUTH_USERNAME: "admin"
      ME_CONFIG_BASICAUTH_PASSWORD: "password"

volumes:
  mysql_data:
  mongo_data:

